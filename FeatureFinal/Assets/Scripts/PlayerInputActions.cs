//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""BasicMovement"",
            ""id"": ""049a388e-409b-4a96-b8da-7dba184b517b"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""c8e5b796-cb0e-4a40-99ed-aed2747fb3c2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""1d2acbea-c4e1-4f92-bf2a-293e52ab287c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fade"",
                    ""type"": ""Button"",
                    ""id"": ""98bf33a3-72ea-47b8-89bb-4f0ccc2f27a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OrbHeal"",
                    ""type"": ""Button"",
                    ""id"": ""af77a6c0-47da-437b-b3ff-c5e9868839b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OrbDmg"",
                    ""type"": ""Button"",
                    ""id"": ""a0805627-b706-4f5b-84e0-b71d34afa90c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BioticHeal"",
                    ""type"": ""Button"",
                    ""id"": ""c04dced6-fefc-445c-8e28-29851d945fa5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BioticGrasp"",
                    ""type"": ""Button"",
                    ""id"": ""3407d13f-04e5-493c-a6a4-bb971ce7a3d0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Coalescence"",
                    ""type"": ""Button"",
                    ""id"": ""45c4440f-457e-4017-818a-26a3109f0428"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d982f477-4472-49e1-9a42-8e3b891beeef"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bc8130ce-3319-4083-bf3a-f2aa20ba7845"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2024f306-03c3-4d61-bd8c-16d54fcdea8a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""163d49d9-0f16-4d52-ae52-97a6af20ec82"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4556e3cc-d2ee-4ef8-9bf1-2476a5406633"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bcd1f196-ed20-40d0-93d2-7dc21c0ec2f8"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f387705f-fe22-4aba-b2dc-aa1e756e86a6"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86328309-29af-48cc-b98b-6d7c20c792c9"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbHeal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44bdef99-c5e1-4c7e-88bb-d3925edbd09f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbDmg"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""067d42c8-a97c-4c6d-9f34-f495a63ae8f4"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold(duration=0.1,pressPoint=0.1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BioticHeal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""405f273c-a273-4a5d-85f1-1daa0d44a6a3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Hold(duration=0.1,pressPoint=0.1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BioticGrasp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d3bc67a-d25c-4236-8b94-652d0d273e8d"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Coalescence"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // BasicMovement
        m_BasicMovement = asset.FindActionMap("BasicMovement", throwIfNotFound: true);
        m_BasicMovement_Movement = m_BasicMovement.FindAction("Movement", throwIfNotFound: true);
        m_BasicMovement_Jump = m_BasicMovement.FindAction("Jump", throwIfNotFound: true);
        m_BasicMovement_Fade = m_BasicMovement.FindAction("Fade", throwIfNotFound: true);
        m_BasicMovement_OrbHeal = m_BasicMovement.FindAction("OrbHeal", throwIfNotFound: true);
        m_BasicMovement_OrbDmg = m_BasicMovement.FindAction("OrbDmg", throwIfNotFound: true);
        m_BasicMovement_BioticHeal = m_BasicMovement.FindAction("BioticHeal", throwIfNotFound: true);
        m_BasicMovement_BioticGrasp = m_BasicMovement.FindAction("BioticGrasp", throwIfNotFound: true);
        m_BasicMovement_Coalescence = m_BasicMovement.FindAction("Coalescence", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // BasicMovement
    private readonly InputActionMap m_BasicMovement;
    private IBasicMovementActions m_BasicMovementActionsCallbackInterface;
    private readonly InputAction m_BasicMovement_Movement;
    private readonly InputAction m_BasicMovement_Jump;
    private readonly InputAction m_BasicMovement_Fade;
    private readonly InputAction m_BasicMovement_OrbHeal;
    private readonly InputAction m_BasicMovement_OrbDmg;
    private readonly InputAction m_BasicMovement_BioticHeal;
    private readonly InputAction m_BasicMovement_BioticGrasp;
    private readonly InputAction m_BasicMovement_Coalescence;
    public struct BasicMovementActions
    {
        private @PlayerInputActions m_Wrapper;
        public BasicMovementActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_BasicMovement_Movement;
        public InputAction @Jump => m_Wrapper.m_BasicMovement_Jump;
        public InputAction @Fade => m_Wrapper.m_BasicMovement_Fade;
        public InputAction @OrbHeal => m_Wrapper.m_BasicMovement_OrbHeal;
        public InputAction @OrbDmg => m_Wrapper.m_BasicMovement_OrbDmg;
        public InputAction @BioticHeal => m_Wrapper.m_BasicMovement_BioticHeal;
        public InputAction @BioticGrasp => m_Wrapper.m_BasicMovement_BioticGrasp;
        public InputAction @Coalescence => m_Wrapper.m_BasicMovement_Coalescence;
        public InputActionMap Get() { return m_Wrapper.m_BasicMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BasicMovementActions set) { return set.Get(); }
        public void SetCallbacks(IBasicMovementActions instance)
        {
            if (m_Wrapper.m_BasicMovementActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnJump;
                @Fade.started -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnFade;
                @Fade.performed -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnFade;
                @Fade.canceled -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnFade;
                @OrbHeal.started -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnOrbHeal;
                @OrbHeal.performed -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnOrbHeal;
                @OrbHeal.canceled -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnOrbHeal;
                @OrbDmg.started -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnOrbDmg;
                @OrbDmg.performed -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnOrbDmg;
                @OrbDmg.canceled -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnOrbDmg;
                @BioticHeal.started -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnBioticHeal;
                @BioticHeal.performed -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnBioticHeal;
                @BioticHeal.canceled -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnBioticHeal;
                @BioticGrasp.started -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnBioticGrasp;
                @BioticGrasp.performed -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnBioticGrasp;
                @BioticGrasp.canceled -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnBioticGrasp;
                @Coalescence.started -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnCoalescence;
                @Coalescence.performed -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnCoalescence;
                @Coalescence.canceled -= m_Wrapper.m_BasicMovementActionsCallbackInterface.OnCoalescence;
            }
            m_Wrapper.m_BasicMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Fade.started += instance.OnFade;
                @Fade.performed += instance.OnFade;
                @Fade.canceled += instance.OnFade;
                @OrbHeal.started += instance.OnOrbHeal;
                @OrbHeal.performed += instance.OnOrbHeal;
                @OrbHeal.canceled += instance.OnOrbHeal;
                @OrbDmg.started += instance.OnOrbDmg;
                @OrbDmg.performed += instance.OnOrbDmg;
                @OrbDmg.canceled += instance.OnOrbDmg;
                @BioticHeal.started += instance.OnBioticHeal;
                @BioticHeal.performed += instance.OnBioticHeal;
                @BioticHeal.canceled += instance.OnBioticHeal;
                @BioticGrasp.started += instance.OnBioticGrasp;
                @BioticGrasp.performed += instance.OnBioticGrasp;
                @BioticGrasp.canceled += instance.OnBioticGrasp;
                @Coalescence.started += instance.OnCoalescence;
                @Coalescence.performed += instance.OnCoalescence;
                @Coalescence.canceled += instance.OnCoalescence;
            }
        }
    }
    public BasicMovementActions @BasicMovement => new BasicMovementActions(this);
    public interface IBasicMovementActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnFade(InputAction.CallbackContext context);
        void OnOrbHeal(InputAction.CallbackContext context);
        void OnOrbDmg(InputAction.CallbackContext context);
        void OnBioticHeal(InputAction.CallbackContext context);
        void OnBioticGrasp(InputAction.CallbackContext context);
        void OnCoalescence(InputAction.CallbackContext context);
    }
}
